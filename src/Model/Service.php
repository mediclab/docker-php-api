<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Model;

class Service
{
    /**
     * @var string
     */
    protected $iD;
    /**
     * The version number of the object such as node, service, etc. This is needed to avoid conflicting writes.
     *
     * @var ObjectVersion
     */
    protected $version;
    /**
     * @var string
     */
    protected $createdAt;
    /**
     * @var string
     */
    protected $updatedAt;
    /**
     * User modifiable configuration for a service.
     *
     * @var ServiceSpec
     */
    protected $spec;
    /**
     * @var ServiceEndpoint
     */
    protected $endpoint;
    /**
     * The status of a service update.
     *
     * @var ServiceUpdateStatus
     */
    protected $updateStatus;
    /**
     * The status of the service's tasks. Provided only when requested as.
     *
     * @var ServiceServiceStatus
     */
    protected $serviceStatus;
    /**
     * The status of the service when it is in one of ReplicatedJob or.
     *
     * @var ServiceJobStatus
     */
    protected $jobStatus;

    public function getID(): ?string
    {
        return $this->iD;
    }

    public function setID(?string $iD): self
    {
        $this->iD = $iD;

        return $this;
    }

    /**
     * The version number of the object such as node, service, etc. This is needed to avoid conflicting writes.
     */
    public function getVersion(): ?ObjectVersion
    {
        return $this->version;
    }

    /**
     * The version number of the object such as node, service, etc. This is needed to avoid conflicting writes.
     */
    public function setVersion(?ObjectVersion $version): self
    {
        $this->version = $version;

        return $this;
    }

    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    public function setCreatedAt(?string $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    public function getUpdatedAt(): ?string
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(?string $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * User modifiable configuration for a service.
     */
    public function getSpec(): ?ServiceSpec
    {
        return $this->spec;
    }

    /**
     * User modifiable configuration for a service.
     */
    public function setSpec(?ServiceSpec $spec): self
    {
        $this->spec = $spec;

        return $this;
    }

    public function getEndpoint(): ?ServiceEndpoint
    {
        return $this->endpoint;
    }

    public function setEndpoint(?ServiceEndpoint $endpoint): self
    {
        $this->endpoint = $endpoint;

        return $this;
    }

    /**
     * The status of a service update.
     */
    public function getUpdateStatus(): ?ServiceUpdateStatus
    {
        return $this->updateStatus;
    }

    /**
     * The status of a service update.
     */
    public function setUpdateStatus(?ServiceUpdateStatus $updateStatus): self
    {
        $this->updateStatus = $updateStatus;

        return $this;
    }

    /**
     * The status of the service's tasks. Provided only when requested as.
     */
    public function getServiceStatus(): ?ServiceServiceStatus
    {
        return $this->serviceStatus;
    }

    /**
     * The status of the service's tasks. Provided only when requested as.
     */
    public function setServiceStatus(?ServiceServiceStatus $serviceStatus): self
    {
        $this->serviceStatus = $serviceStatus;

        return $this;
    }

    /**
     * The status of the service when it is in one of ReplicatedJob or.
     */
    public function getJobStatus(): ?ServiceJobStatus
    {
        return $this->jobStatus;
    }

    /**
     * The status of the service when it is in one of ReplicatedJob or.
     */
    public function setJobStatus(?ServiceJobStatus $jobStatus): self
    {
        $this->jobStatus = $jobStatus;

        return $this;
    }
}
